from random import randrange

def display_board(board):
    # The function accepts one parameter containing the board's current status
    # and prints it out to the console.
    for i in range(len(board)):
        print(board[i])

def make_list_of_free_fields(board):
    # The function browses the board and builds a list of all the free squares; 
    # the list consists of tuples, while each tuple is a pair of row and column numbers.
    freeSq = []
    for i in range(len(board)):
        for j in range(len(board[i])):
            if ((board[i][j] != 'O') or (board[i][j] != 'X')):
                freeTuple = (i+1,j+1)
                freeSq.append(freeTuple)
    return freeSq
        

board=[[1,2,3],[4,'X',6],[7,8,9]]
display_board(board)
print(make_list_of_free_fields(board))

def enter_move(board):
    # The function accepts the board's current status, asks the user about their move, 
    # checks the input, and updates the board according to the user's decision.
    while true:
        
        try:
            value=int(input("Please enter your move: "))
        except:
            print("incorrect move please try again")
        free=make_list_of_free_fields(board)
        # for i in range(len(free)): 
        
        



# def victory_for(board, sign):
#     # The function analyzes the board's status in order to check if 
#     # the player using 'O's or 'X's has won the game


# def draw_move(board):
#     # The function draws the computer's move and updates the board.
