# Sudoku 
# reads 9 rows, each row of the board must contain all digits from 0 to 9 
# reads 9colums, each column of the board must contain all digits from 0 to 9
# each of the nine 3x3 "tiles" of the table must contain all digits from 0 to 9
# userInput = input("please enter the Sudoku to verify: ")
userInput="295743861431865927876192543387459216612387495549216738763524189928671354154938672"
# userInput="195743862431865927876192543387459216612387495549216738763524189928671354254938671"
Sudoku = list(userInput)
print("Sudoku :", Sudoku)
rawS=False
ColumnS=False
tileS=False
SudokuR=[]
SudokuC=[]
SudokuT1=[]
SudokuT2=[]
SudokuT3=[]
SudokuT4=[]
SudokuT5=[]
SudokuT6=[]
SudokuT7=[]
SudokuT8=[]
SudokuT9=[]
equals=0
SetIndex=-1
set=['1','2','3','4','5','6','7','8','9']
print("set :", set)
# breaking down into lists of:
# raws

def brakeIntoTiles(start,end):
    SudokuTM1=[]
    for i in range(start,end+1):
        # print("i: ", i)
        if ((i>=start)and(i<=start+2)):
            SudokuTM1.append(Sudoku[i])
        if((i>=start+7)and(i<=start+11)):
            SudokuTM1.append(Sudoku[i])
        if((i>=start+18)and(i<=start+20)):
            SudokuTM1.append(Sudoku[i])
    print("SudokuTM1 : ", SudokuTM1)
    return SudokuTM1

for i in range(0,81,9):
    print("i: ", i)
    SudokuR=Sudoku[i:i+9]
    print("SudokuR : ", SudokuR)
    for j in range(0,9):
        if (SudokuR[j]in set):
            SetIndex = int(SudokuR[j])-1
            set[SetIndex]+="Y"
            equals+=1
        else:
            break
    print("set :", set)
    print("equals :", equals)
    set=['1','2','3','4','5','6','7','8','9']
    print("set :", set)
    if((equals%9)!=0):
        break
    if(equals==81):
        rawS=True
if(rawS):
    print("raws are ok so continuing to check the columns")
    set=['1','2','3','4','5','6','7','8','9']
    for i in range(0,9):
        print("i: ", i)
        SudokuC=Sudoku[i::9]
        print("SudokuC : ", SudokuC)
        for j in range(0,9):
            if (SudokuC[j]in set):
                SetIndex = int(SudokuC[j])-1
                set[SetIndex]+="Y"
                equals+=1
            else:
                break
        print("set :", set)
        print("equals :", equals)
        set=['1','2','3','4','5','6','7','8','9']
        print("set :", set)
        if((equals%9)!=0):
            break
        if(equals==162):
            ColumnS=True
    if (ColumnS):
        print("columns are ok continuing to check the tiles")
        set=['1','2','3','4','5','6','7','8','9']
        

    
    
    
        # print("SudokuT2 : ", SudokuT2)
        # print("SudokuT3 : ", SudokuT3)
        # print("SudokuT4 : ", SudokuT4)
        # print("SudokuT5 : ", SudokuT5)
        # print("SudokuT6 : ", SudokuT6)
        # print("SudokuT7 : ", SudokuT7)
        # print("SudokuT8 : ", SudokuT8)
        # print("SudokuT9 : ", SudokuT9)
       
       
       
       
        for j in range(0,9):
            if (SudokuT1[j]in set):
                SetIndex = int(SudokuT1[j])-1
                set[SetIndex]+="Y"
                equals+=1
            else:
                break
        if((equals%9)!=0):
            print("Tile1 is not a Sudoku so it is not a Sudoku")
        else:
            print("Tile1 is a Sudoku so continuing to check Tile2")
            for j in range(0,9):
                if (SudokuT2[j]in set):
                    SetIndex = int(SudokuT2[j])-1
                    set[SetIndex]+="Y"
                    equals+=1
                else:
                    break
            if((equals%9)!=0):
                print("Tile2 is not a Sudoku so it is is not a Sudoku")
            else:
                print("Tile2 is a Sudoku so continuing to check Tile3")
                for j in range(0,9):
                    if (SudokuT3[j]in set):
                        SetIndex = int(SudokuT3[j])-1
                        set[SetIndex]+="Y"
                        equals+=1
                    else:
                        break
            
            
            
            
            
            
        if(equals==81):
            tileS=True
        print("It is a Sudoku")
    else:
        print("columns are not a Sudoku no need to continue")
        
        
    
else:
    print("raws are not a Sudoku no need to continue")
        
